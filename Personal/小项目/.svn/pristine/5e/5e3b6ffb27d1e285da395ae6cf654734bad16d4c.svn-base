//
//  BaseViewController.swift
//  ComicAndPicture
//
//  Created by vcyber on 16/11/2.
//  Copyright © 2016年 vcyber. All rights reserved.
//

import UIKit

class BaseViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, UICollectionViewDelegateFlowLayout, UICollectionViewDelegate, UICollectionViewDataSource {

    lazy var tableView:UITableView = {
        let tempTableView = UITableView(frame: CGRect(x: 0, y: 0, width: SCREEN_WIDTH, height: SCREEN_HEIGHT - 64), style: UITableViewStyle.plain)
        tempTableView.delegate = self
        tempTableView.dataSource = self
        tempTableView.showsVerticalScrollIndicator = false
        return tempTableView
    }()
    
    lazy var collectionView:UICollectionView = {
        let layout: UICollectionViewFlowLayout = UICollectionViewFlowLayout()
        let tempCollectionView = UICollectionView(frame: CGRect(x: 0, y: 0, width: SCREEN_WIDTH, height: SCREEN_HEIGHT - 64 - 44), collectionViewLayout: layout)
        tempCollectionView.backgroundColor = UIColor.white
        tempCollectionView.delegate = self
        tempCollectionView.dataSource = self
        tempCollectionView.showsVerticalScrollIndicator = false
        return tempCollectionView
    }()
    
    lazy var dataArray:Array<Any> = {
        let tempArray = [Any]();
        return tempArray
    }()
    
    var urlString:String?
    var page = 1
    private var rightItmeAction: ((UIButton) -> Void)?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        self.view.backgroundColor = UIColor.white
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.navigationBar.barStyle = UIBarStyle.black
        if self.isKind(of: ComicViewController.self) || self.isKind(of: PictureViewController.self) || self.isKind(of: TopViewController.self) || self.isKind(of: CategoryViewController.self) || self.isKind(of: MeViewController.self) {
            self.tabBarController?.tabBar.isHidden = false
        }else {
            self.tabBarController?.tabBar.isHidden = true
        }
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.navigationBar.barStyle = UIBarStyle.default
    }
    
    func addBackItem() -> Void {
        let imageView: UIImageView = UIImageView(frame: CGRect(x: 0, y: 0, width: 30, height: 30));
        imageView.image = UIImage(named: "back");
        imageView.isUserInteractionEnabled = true;
        let tap:UITapGestureRecognizer = UITapGestureRecognizer(target: self, action:#selector(back))
        imageView.addGestureRecognizer(tap);
        self.navigationItem.leftBarButtonItem = UIBarButtonItem.init(customView: imageView)
    }
    
    func back() {
        self.navigationController!.popViewController(animated: true);
    }
    
    func addRightItem(imageName:String, action:((UIButton) -> Void)?) -> Void {
        rightItmeAction = action
        let btn: UIButton = UIButton(frame: CGRect(x: 0, y: 0, width: 30, height: 30))
        btn.setImage(UIImage(named: imageName), for: .normal)
        btn.addTarget(self, action: #selector(rightAction), for: .touchUpInside)
        self.navigationItem.rightBarButtonItem = UIBarButtonItem(customView: btn)
    }
    
    func rightAction(btn: UIButton) -> Void {
        if self.rightItmeAction != nil {
            self.rightItmeAction!(btn)
        }
    }
    
    func hiddenNaviagtor(hidden: Bool) -> Void {
        self.navigationController?.isNavigationBarHidden = hidden;
    }
    
    
    func createRefresh(scrollView: UIScrollView, getData: @escaping () -> Void) {
        weak var weakSelf = self
        let header:MJRefreshGifHeader = MJRefreshGifHeader {
            weakSelf?.page = 1;
            getData()
        }
        header.setImages([UIImage(named:"common_loading_anne_0")!, UIImage(named:"common_loading_anne_1")!], for: MJRefreshState.refreshing)
        header.setImages([UIImage(named:"common_loading_anne_0")!, UIImage(named:"common_loading_anne_1")!], for: MJRefreshState.pulling)
        header.setImages([UIImage(named:"common_loading_anne_0")!, UIImage(named:"common_loading_anne_1")!], for: MJRefreshState.idle)
        
        
        let footer: MJRefreshAutoGifFooter = MJRefreshAutoGifFooter {
            weakSelf?.page += 1
            getData()
        }
        footer.setImages([UIImage(named:"common_loading_anne_0")!, UIImage(named:"common_loading_anne_1")!], for: MJRefreshState.refreshing)
        scrollView.mj_header = header;
        scrollView.mj_footer = footer;
    }
    
    // MARK: UITableView
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return dataArray.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = ComicCell.createCell(tableView: tableView, reuseIdentifier: "ComicCell")
        cell.configCell(model: self.dataArray[indexPath.row] as! ComicModel)
        cell.selectionStyle = UITableViewCellSelectionStyle.none
        return cell
        
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 160
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let detail: ComicDetailViewController = ComicDetailViewController()
        detail.model = dataArray[indexPath.row] as? ComicModel
        self.navigationController?.pushViewController(detail, animated: true)
    }
    
    // MARK: UICollectionView
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return dataArray.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell:CategoryCell = collectionView.dequeueReusableCell(withReuseIdentifier: "CATEGORYCELL", for: indexPath) as! CategoryCell
        cell.configCell(model: self.dataArray[indexPath.row] as! CategoryModel)
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: (SCREEN_WIDTH - 60) / 3, height: (SCREEN_WIDTH - 60) / 3 + 20)
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
        return 20
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        return 20
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -> UIEdgeInsets {
        return UIEdgeInsets(top: 5, left: 10, bottom: 5, right: 10)
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
